% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/query.R
\name{polarssql_query}
\alias{polarssql_query}
\title{Execute SQL query}
\usage{
polarssql_query(
  sql,
  conn = polarssql_default_connection(),
  result_type = c("polars_lf", "polars_df", "data_frame", "nanoarrow_array_stream")
)
}
\arguments{
\item{sql}{A SQL string.}

\item{conn}{A polarssql connection, created by \code{\link[=polarssql]{polarssql()}}.}

\item{result_type}{The type of result to return.
\code{nanoarrow_array_stream} requires \link[nanoarrow:nanoarrow-package]{the nanoarrow package}.}
}
\value{
One of the following depending on \code{result_type}:
\itemize{
\item \link[polars:LazyFrame_class]{polars LazyFrame} (when \code{result_type = "polars_lf"}, default)
\item \link[polars:DataFrame_class]{polars DataFrame} (when \code{result_type = "polars_df"})
\item \link{data.frame} (when \code{result_type = "data_frame"})
\item \link[nanoarrow:as_nanoarrow_array_stream]{nanoarrow_array_stream}
}
}
\description{
Execute SQL query
}
\examples{
con <- dbConnect(polarssql())
polarssql_register(con, mtcars = mtcars)

query <- "SELECT * FROM mtcars LIMIT 5"

# Returns a polars LazyFrame
polarssql_query(query, con)

# Returns a data.frame
polarssql_query(query, con, result_type = "data_frame")

# Returns a polars DataFrame
polarssql_query(query, con, result_type = "polars_df")

# Returns a nanoarrow_array_stream
if (requireNamespace("nanoarrow", quietly = TRUE)) {
  polarssql_query(query, con, result_type = "nanoarrow_array_stream")
}
}
